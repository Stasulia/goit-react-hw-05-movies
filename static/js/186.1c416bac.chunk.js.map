{"version":3,"file":"static/js/186.1c416bac.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.jsx","components/Service/MovieApi.jsx"],"sourcesContent":["// import { Loader } from 'components/Loader/Loader';\n// import { getMovieReviews } from 'components/Service/MovieApi';\n// import { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n\n// const Reviews = () => {\n//   const { movieId } = useParams();\n//   const [reviews, setReviews] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [status, setStatus] = useState('');\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   useEffect(() => {\n//     setIsLoading(true);\n//     if (!movieId) return;\n//     const fetchMovieReviews = async () => {\n//       try {\n//         const data = await getMovieReviews(movieId);\n//         const reviews = data.result;\n//         if (!reviews.length) {\n//           setError(`There is no reviews`);\n//           setStatus('rejected');\n//         }\n//         setReviews(reviews);\n//       } catch (error) {\n//         setError(error.message);\n//         setStatus('rejected');\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     };\n//     fetchMovieReviews();\n//   }, [movieId]);\n\n//   return (\n//     <>\n//       {isLoading && <Loader />}\n//       {status === 'rejected' && <p>{error}</p>}\n\n//       {/* {reviews.map(review => (\n//         <li key={review.id}>\n//           <p>Author: {review.author}</p>\n//           <p>{review.content}</p>\n//         </li>\n//       ))} */}\n//       <ul>\n//         {reviews.length === 0\n//           ? \"Sorry, we don't have reviews for this movie\"\n//           : reviews.map(({ author, content, id }) => (\n//               <li key={id}>\n//                 <p>Author: {author}</p>\n//                 <p>{content}</p>\n//               </li>\n//             ))}\n//       </ul>\n//     </>\n//   );\n// };\n\n// export default Reviews;\n\nimport { getMovieReviews } from 'components/Service/MovieApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n// import css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <div>\n      <>\n        {reviews.length === 0 ? (\n          <p>\"Sorry, we don't have reviews for this movie\"</p>\n        ) : (\n          reviews.map(({ author, content, id }) => (\n            <ol key={id}>\n              <p>Author: {author}</p>\n              <h2>{content}</h2>\n            </ol>\n          ))\n        )}\n      </>\n    </div>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nexport const API_KEY = '7e904d0cc36c36a15049d60007f4c80a';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const getMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n};\n\nexport const getMoviesDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie details: ', error);\n    return null;\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie credits', error);\n    return null;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting reviews for the movie:', error);\n    return null;\n  }\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","then","_jsx","children","_Fragment","length","map","_ref","author","content","id","_jsxs","API_KEY","BASE_URL","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","t0","console","error","stop","apply","arguments","getMovies","_ref2","_callee2","query","_context2","results","_x","getMoviesDetails","_ref3","_callee3","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}
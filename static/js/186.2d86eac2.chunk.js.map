{"version":3,"file":"static/js/186.2d86eac2.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.jsx","components/Service/MovieApi.jsx"],"sourcesContent":["// import { Loader } from 'components/Loader/Loader';\n// import { getMovieReviews } from 'components/Service/MovieApi';\n// import { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n\n// const Reviews = () => {\n//   const { movieId } = useParams();\n//   const [reviews, setReviews] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [status, setStatus] = useState('');\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   useEffect(() => {\n//     setIsLoading(true);\n//     if (!movieId) return;\n//     const fetchMovieReviews = async () => {\n//       try {\n//         const data = await getMovieReviews(movieId);\n//         const reviews = data.result;\n//         if (!reviews.length) {\n//           setError(`There is no reviews`);\n//           setStatus('rejected');\n//         }\n//         setReviews(reviews);\n//       } catch (error) {\n//         setError(error.message);\n//         setStatus('rejected');\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     };\n//     fetchMovieReviews();\n//   }, [movieId]);\n\n//   return (\n//     <>\n//       {isLoading && <Loader />}\n//       {status === 'rejected' && <p>{error}</p>}\n\n//       {/* {reviews.map(review => (\n//         <li key={review.id}>\n//           <p>Author: {review.author}</p>\n//           <p>{review.content}</p>\n//         </li>\n//       ))} */}\n//       <ul>\n//         {reviews.length === 0\n//           ? \"Sorry, we don't have reviews for this movie\"\n//           : reviews.map(({ author, content, id }) => (\n//               <li key={id}>\n//                 <p>Author: {author}</p>\n//                 <p>{content}</p>\n//               </li>\n//             ))}\n//       </ul>\n//     </>\n//   );\n// };\n\n// export default Reviews;\n\nimport { getMovieReviews } from 'components/Service/MovieApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n// import css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <div>\n      <>\n        {reviews.length === 0\n          ? \"Sorry, we don't have reviews for this movie\"\n          : reviews.map(({ author, content, id }) => (\n              <li key={id}>\n                <p>Author: {author}</p>\n                <p>{content}</p>\n              </li>\n            ))}\n      </>\n    </div>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nexport const API_KEY = '7e904d0cc36c36a15049d60007f4c80a';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const getMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n};\n\nexport const getMoviesDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie details: ', error);\n    return null;\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie credits', error);\n    return null;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting reviews for the movie:', error);\n    return null;\n  }\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","then","_jsx","children","_Fragment","length","map","_ref","author","content","id","_jsxs","API_KEY","BASE_URL","getMovies","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee2","query","response","_context2","prev","next","axios","concat","sent","abrupt","data","results","t0","console","error","stop","_x","apply","arguments","getMoviesDetails","_ref3","_callee3","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}
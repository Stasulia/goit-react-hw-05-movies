{"version":3,"file":"static/js/884.ef0af3db.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/Service/MovieApi.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import { Circles } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Circles\n      height=\"80\"\n      width=\"80\"\n      color=\"rgb(164, 218, 220)\"\n      ariaLabel=\"circles-loading\"\n      wrapperStyle={{\n        display: 'flex',\n        justifyContent: 'center',\n        textAlign: 'center',\n      }}\n      visible={true}\n    />\n  );\n};\n","import axios from 'axios';\n\nexport const API_KEY = '7e904d0cc36c36a15049d60007f4c80a';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const getMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n};\n\nexport const getMoviesDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie details: ', error);\n    return null;\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie credits', error);\n    return null;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error getting reviews for the movie:', error);\n    return null;\n  }\n};\n","// import { GoBackBtn } from 'components/GoBackBtn/GoBackBtn';\nimport { Loader } from 'components/Loader/Loader';\nimport { getMoviesDetails } from 'components/Service/MovieApi';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom';\n// import { Circles } from 'react-loader-spinner';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  //   const backLinkRef = useRef(location.state?.from ?? '/');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const movieData = await getMoviesDetails(movieId);\n        setMovieDetails(movieData);\n      } catch (error) {\n        console.error('Error searching movie details:', error);\n        setMovieDetails(null);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <Loader />;\n  }\n\n  const genres = movieDetails.genres.map(genre => genre.name).join(',');\n\n  const handleClick = () => {\n    navigate(location.state?.from ?? `/movies`);\n  };\n  return (\n    <>\n      <button onClick={handleClick}>go back</button>\n      {/* <GoBackBtn path={backLinkRef.current} /> */}\n      <h1>{movieDetails.title}</h1>\n      <p>Overview: {movieDetails.overview}</p>\n      <p>Genres: {genres} </p> {}\n      <img\n        src={`https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`}\n        alt=\"movieDetails.title\"\n        // alt=\"\"\n      />\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        {/* <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li> */}\n      </ul>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Loader","_jsx","Circles","height","width","color","ariaLabel","wrapperStyle","display","justifyContent","textAlign","visible","API_KEY","BASE_URL","getMovies","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee2","query","response","_context2","prev","next","axios","concat","sent","abrupt","data","results","t0","console","error","stop","_x","apply","arguments","getMoviesDetails","_ref3","_callee3","movieId","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","_x3","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","useParams","location","useLocation","navigate","useNavigate","useEffect","fetchMovieDetails","_ref","_callee","movieData","_context","genres","map","genre","name","join","_jsxs","_Fragment","children","onClick","_location$state$from","_location$state","state","from","title","overview","src","poster_path","alt","Link","to"],"sourceRoot":""}
{"version":3,"file":"static/js/149.8a43b8cf.chunk.js","mappings":"4LAEaA,EAAS,WACpB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CACNC,OAAO,KACPC,MAAM,KACNC,MAAM,qBACNC,UAAU,kBACVC,aAAc,CACZC,QAAS,OACTC,eAAgB,SAChBC,UAAW,UAEbC,SAAS,GAGf,C,uNCfaC,EAAU,mCACVC,EAAW,+BAcXC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAK,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAETC,EAAAA,EAAAA,IAAU,GAADC,OAC3BZ,EAAQ,0BAAAY,OAAyBb,EAAO,WAAAa,OAAUN,IACrD,KAAD,EAFa,OAARC,EAAQC,EAAAK,KAAAL,EAAAM,OAAA,SAGPP,EAASQ,KAAKC,SAAO,OAEoB,OAFpBR,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAE5BU,QAAQC,MAAM,0BAAyBX,EAAAS,IAAST,EAAAM,OAAA,SACzC,IAAE,yBAAAN,EAAAY,OAAA,GAAAf,EAAA,kBAEZ,gBAVqBgB,GAAA,OAAAnB,EAAAoB,MAAA,KAAAC,UAAA,KAYTC,EAAgB,eAAAC,GAAAtB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAsB,EAAMC,GAAO,IAAApB,EAAA,OAAAH,IAAAA,MAAA,SAAAwB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,EAElBC,EAAAA,EAAAA,IAAU,GAADC,OAC3BZ,EAAQ,WAAAY,OAAUe,EAAO,aAAAf,OAAYb,IACxC,KAAD,EAFa,OAARQ,EAAQqB,EAAAf,KAAAe,EAAAd,OAAA,SAGPP,EAASQ,MAAI,OAEkC,OAFlCa,EAAAnB,KAAA,EAAAmB,EAAAX,GAAAW,EAAA,SAEpBV,QAAQC,MAAM,gCAA+BS,EAAAX,IAASW,EAAAd,OAAA,SAC/C,MAAI,yBAAAc,EAAAR,OAAA,GAAAM,EAAA,kBAEd,gBAV4BG,GAAA,OAAAJ,EAAAH,MAAA,KAAAC,UAAA,KAYhBO,EAAe,eAAAC,GAAA5B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA4B,EAAML,GAAO,IAAApB,EAAA,OAAAH,IAAAA,MAAA,SAAA6B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAEjBC,EAAAA,EAAAA,IAAU,GAADC,OAC3BZ,EAAQ,WAAAY,OAAUe,EAAO,qBAAAf,OAAoBb,IAChD,KAAD,EAFa,OAARQ,EAAQ0B,EAAApB,KAAAoB,EAAAnB,OAAA,SAGPP,EAASQ,MAAI,OAEgC,OAFhCkB,EAAAxB,KAAA,EAAAwB,EAAAhB,GAAAgB,EAAA,SAEpBf,QAAQC,MAAM,8BAA6Bc,EAAAhB,IAASgB,EAAAnB,OAAA,SAC7C,MAAI,yBAAAmB,EAAAb,OAAA,GAAAY,EAAA,kBAEd,gBAV2BE,GAAA,OAAAH,EAAAT,MAAA,KAAAC,UAAA,KAYfY,EAAe,eAAAC,GAAAjC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAiC,EAAMV,GAAO,IAAApB,EAAA,OAAAH,IAAAA,MAAA,SAAAkC,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA7B,KAAA,EAAA6B,EAAA5B,KAAA,EAEjBC,EAAAA,EAAAA,IAAU,GAADC,OAC3BZ,EAAQ,WAAAY,OAAUe,EAAO,qBAAAf,OAAoBb,IAChD,KAAD,EAFa,OAARQ,EAAQ+B,EAAAzB,KAAAyB,EAAAxB,OAAA,SAGPP,EAASQ,KAAKC,SAAO,OAEiC,OAFjCsB,EAAA7B,KAAA,EAAA6B,EAAArB,GAAAqB,EAAA,SAE5BpB,QAAQC,MAAM,uCAAsCmB,EAAArB,IAASqB,EAAAxB,OAAA,SACtD,MAAI,yBAAAwB,EAAAlB,OAAA,GAAAiB,EAAA,kBAEd,gBAV2BE,GAAA,OAAAH,EAAAd,MAAA,KAAAC,UAAA,I,8ICd5B,EApCmB,WACjB,IAAAiB,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAiBpC,OAJAG,EAAAA,EAAAA,YAAU,YACPP,GAAeC,EAAeI,EAAaG,IAAI,UAClD,GAAG,CAACH,EAAcL,KAGhBS,EAAAA,EAAAA,MAAA,QAAMC,SAhBe,SAAAC,GACrBA,EAAMC,iBAENN,EAAgB,CAAEO,OAAQb,IAC1BC,EAAe,GACjB,EAWiCa,SAAA,EAC7BL,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACEtE,EAAAA,EAAAA,KAAA,SAAOuE,QAAQ,GAAED,SAAC,WAClBtE,EAAAA,EAAAA,KAAA,SACEwE,KAAK,SACLC,KAAK,OACLC,GAAG,qBACHC,MAAOnB,EACPoB,SAjBa,SAAHC,GAA+B,IAAfF,EAAKE,EAAfC,OAAUH,MAChClB,EAAekB,EACjB,QAkBI3E,EAAAA,EAAAA,KAAA,UAAQyE,KAAK,SAAQH,SAAC,aAG5B,E,SCiBA,EAhDe,WACb,IAAAlB,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7C2B,EAAYzB,EAAA,GAAE0B,EAAe1B,EAAA,GACpC2B,GAAe5B,EAAAA,EAAAA,UAAS,GAAjB6B,GAAmB3B,EAAAA,EAAAA,GAAA0B,EAAA,GAAf,GACXE,GAAkC9B,EAAAA,EAAAA,WAAS,GAAM+B,GAAA7B,EAAAA,EAAAA,GAAA4B,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9B1B,GAAuBC,EAAAA,EAAAA,MAAhBE,GAAiCN,EAAAA,EAAAA,GAAAG,EAAA,GAArB,GAOb6B,GAAeC,EAAAA,EAAAA,aAAW,eAAAX,GAAA9D,EAAAA,EAAAA,GAAAC,IAAAA,MAC9B,SAAAyE,EAAMvE,GAAK,IAAAU,EAAA,OAAAZ,IAAAA,MAAA,SAAA0E,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,OAEY,OAFZoE,EAAArE,KAAA,EAEPiE,GAAa,GAAMI,EAAApE,KAAA,GACGT,EAAAA,EAAAA,IAAUK,EAAOgE,GAAM,KAAD,EAAtCtD,EAAO8D,EAAAjE,KACbuD,EAAgBpD,GAAS8D,EAAApE,KAAA,gBAAAoE,EAAArE,KAAA,EAAAqE,EAAA7D,GAAA6D,EAAA,SAEzB5D,QAAQC,MAAM2D,EAAA7D,GAAM8D,SAAS,QAET,OAFSD,EAAArE,KAAA,GAE7BiE,GAAa,GAAOI,EAAAE,OAAA,6BAAAF,EAAA1D,OAAA,GAAAyD,EAAA,wBAEvB,gBAAAxD,GAAA,OAAA4C,EAAA3C,MAAA,KAAAC,UAAA,EAX6B,GAY9B,CAAC+C,IAQH,OALAnB,EAAAA,EAAAA,YAAU,WACR,IAAM7C,EAAQ2C,EAAaG,IAAI,UAC/B9C,GAASqE,EAAarE,EACxB,GAAG,CAACqE,EAAc1B,KAGhBI,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAAvB,SAAA,CACGe,IAAarF,EAAAA,EAAAA,KAACD,EAAAA,EAAM,KACrBC,EAAAA,EAAAA,KAAC8F,EAAU,KAEX9F,EAAAA,EAAAA,KAAA,OAAAsE,SAC2B,IAAxBS,EAAagB,QACZhB,EAAaiB,KAAI,SAAAC,GAAK,OACpBjG,EAAAA,EAAAA,KAAA,MAAAsE,UACEtE,EAAAA,EAAAA,KAACkG,EAAAA,GAAI,CAACC,GAAE,WAAA3E,OAAayE,EAAMvB,IAAKJ,SAAE2B,EAAMG,SADjCH,EAAMvB,GAEV,QAKjB,C","sources":["components/Loader/Loader.jsx","components/Service/MovieApi.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import { Circles } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Circles\n      height=\"80\"\n      width=\"80\"\n      color=\"rgb(164, 218, 220)\"\n      ariaLabel=\"circles-loading\"\n      wrapperStyle={{\n        display: 'flex',\n        justifyContent: 'center',\n        textAlign: 'center',\n      }}\n      visible={true}\n    />\n  );\n};\n","import axios from 'axios';\n\nexport const API_KEY = '7e904d0cc36c36a15049d60007f4c80a';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const getMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    return [];\n  }\n};\n\nexport const getMoviesDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie details: ', error);\n    return null;\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error getting movie credits', error);\n    return null;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error getting reviews for the movie:', error);\n    return null;\n  }\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst SearchForm = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    // handleSubmit(searchQuery);\n    setSearchParams({ search: searchQuery });\n    setSearchQuery('');\n  };\n\n  const handleChange = ({ target: { value } }) => {\n    setSearchQuery(value);\n  };\n\n  useEffect(() => {\n    !searchQuery && setSearchQuery(searchParams.get('search'));\n  }, [searchParams, searchQuery]);\n\n  return (\n    <form onSubmit={handleOnSubmit}>\n      <div>\n        <label htmlFor=\"\">Title</label>\n        <input\n          name=\"search\"\n          type=\"text\"\n          id=\"exampleInputSearch\"\n          value={searchQuery}\n          onChange={handleChange}\n        />\n      </div>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import { Loader } from 'components/Loader/Loader';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { getMovies } from 'components/Service/MovieApi';\nimport { useCallback, useEffect, useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchResult, setSearchResult] = useState([]);\n  const [page] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams] = useSearchParams();\n\n  // const handleSearch = async query => {\n  //   const results = await getMovies(query);\n  //   setSearchResult(results);\n  // };\n\n  const getFindMovie = useCallback(\n    async query => {\n      try {\n        setIsLoading(true);\n        const results = await getMovies(query, page);\n        setSearchResult(results);\n      } catch (error) {\n        console.error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [page]\n  );\n\n  useEffect(() => {\n    const query = searchParams.get('search');\n    query && getFindMovie(query);\n  }, [getFindMovie, searchParams]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <SearchForm />\n      {/* <SearchForm onSubmit={handleSearch} /> */}\n      <div>\n        {searchResult.length !== 0 &&\n          searchResult.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n            </li>\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Loader","_jsx","Circles","height","width","color","ariaLabel","wrapperStyle","display","justifyContent","textAlign","visible","API_KEY","BASE_URL","getMovies","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee2","query","response","_context2","prev","next","axios","concat","sent","abrupt","data","results","t0","console","error","stop","_x","apply","arguments","getMoviesDetails","_ref3","_callee3","movieId","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","get","_jsxs","onSubmit","event","preventDefault","search","children","htmlFor","name","type","id","value","onChange","_ref","target","searchResult","setSearchResult","_useState3","page","_useState5","_useState6","isLoading","setIsLoading","getFindMovie","useCallback","_callee","_context","message","finish","_Fragment","SearchForm","length","map","movie","Link","to","title"],"sourceRoot":""}